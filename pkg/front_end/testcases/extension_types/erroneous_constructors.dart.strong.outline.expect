library;
//
// Problems in library:
//
// pkg/front_end/testcases/extension_types/erroneous_constructors.dart:10:18: Error: Extension type constructors can't declare super formal parameters.
//   E2.named(super.it) : this(it);
//                  ^^
//
// pkg/front_end/testcases/extension_types/erroneous_constructors.dart:10:18: Error: Super parameters can only be used in non-redirecting generative constructors.
//   E2.named(super.it) : this(it);
//                  ^
//
import self as self;
import "dart:core" as core;

extension type E1(dynamic it) {
  abstract extension-type-member representation-field get it() → dynamic;
  constructor • = self::E1|constructor#;
  constructor tearoff • = self::E1|constructor#_#new#tearOff;
  constructor named = self::E1|constructor#named;
  constructor tearoff named = self::E1|constructor#_#named#tearOff;
}
extension type E2(core::num it) {
  abstract extension-type-member representation-field get it() → core::num;
  constructor • = self::E2|constructor#;
  constructor tearoff • = self::E2|constructor#_#new#tearOff;
  constructor named = self::E2|constructor#named;
  constructor tearoff named = self::E2|constructor#_#named#tearOff;
}
extension type E3(core::String it) {
  abstract extension-type-member representation-field get it() → core::String;
  constructor • = self::E3|constructor#;
  constructor tearoff • = self::E3|constructor#_#new#tearOff;
  constructor named = self::E3|constructor#named;
  constructor tearoff named = self::E3|constructor#_#named#tearOff;
}
extension type E4(core::bool it) {
  abstract extension-type-member representation-field get it() → core::bool;
  constructor • = self::E4|constructor#;
  constructor tearoff • = self::E4|constructor#_#new#tearOff;
  constructor named = self::E4|constructor#named;
  constructor tearoff named = self::E4|constructor#_#named#tearOff;
}
static extension-type-member method E1|constructor#(dynamic it) → self::E1% /* erasure=dynamic, declared=! */
  ;
static extension-type-member synthetic method E1|constructor#_#new#tearOff(dynamic it) → self::E1% /* erasure=dynamic, declared=! */
  return self::E1|constructor#(it);
static extension-type-member method E1|constructor#named(dynamic value) → self::E1% /* erasure=dynamic, declared=! */
  ;
static extension-type-member synthetic method E1|constructor#_#named#tearOff(dynamic value) → self::E1% /* erasure=dynamic, declared=! */
  return self::E1|constructor#named(value);
static extension-type-member erroneous method E2|constructor#(core::num it) → self::E2% /* erasure=core::num, declared=! */
  ;
static extension-type-member synthetic method E2|constructor#_#new#tearOff(core::num it) → self::E2% /* erasure=core::num, declared=! */
  return self::E2|constructor#(it);
static extension-type-member method E2|constructor#named(invalid-type it) → self::E2% /* erasure=core::num, declared=! */ {
  lowered final self::E2% /* erasure=core::num, declared=! */ #this;
  return #this;
}
static extension-type-member synthetic method E2|constructor#_#named#tearOff(invalid-type it) → self::E2% /* erasure=core::num, declared=! */
  return self::E2|constructor#named(it);
static extension-type-member method E3|constructor#(core::String it) → self::E3% /* erasure=core::String, declared=! */
  ;
static extension-type-member synthetic method E3|constructor#_#new#tearOff(core::String it) → self::E3% /* erasure=core::String, declared=! */
  return self::E3|constructor#(it);
static extension-type-member method E3|constructor#named(core::String it1, core::String it2) → self::E3% /* erasure=core::String, declared=! */
  ;
static extension-type-member synthetic method E3|constructor#_#named#tearOff(core::String it1, core::String it2) → self::E3% /* erasure=core::String, declared=! */
  return self::E3|constructor#named(it1, it2);
static extension-type-member method E4|constructor#(core::bool it) → self::E4% /* erasure=core::bool, declared=! */
  ;
static extension-type-member synthetic method E4|constructor#_#new#tearOff(core::bool it) → self::E4% /* erasure=core::bool, declared=! */
  return self::E4|constructor#(it);
static extension-type-member method E4|constructor#named(core::bool it) → self::E4% /* erasure=core::bool, declared=! */
  ;
static extension-type-member synthetic method E4|constructor#_#named#tearOff(core::bool it) → self::E4% /* erasure=core::bool, declared=! */
  return self::E4|constructor#named(it);
