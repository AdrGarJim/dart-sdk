library;
import self as self;

import "dart:test";

static method main() → dynamic
  ;

library;
import self as self2;
import "dart:_internal" as _in;
import "dart:core" as core;

import "dart:_internal";
import "org-dartlang-testcase:///main_lib.dart" as prefix;

@/* from org-dartlang-testcase:///patch_lib.dart */ _in::patch
class Class extends core::Object {
  field core::int _field /* from org-dartlang-testcase:///patch_lib.dart */;
  synthetic constructor •() → self2::Class
    ;
  @_in::patch
  method /* from org-dartlang-testcase:///patch_lib.dart */ method() → core::int
    ;
}
@_in::patch
extension Extension on core::int {
  method method = self2::Extension|method;
  method tearoff method = self2::Extension|get#method;
  static field _field = self2::Extension|_field;
}
static field core::int Extension|_field /* from org-dartlang-testcase:///patch_lib.dart */;
@_in::patch
static extension-member method /* from org-dartlang-testcase:///patch_lib.dart */ Extension|method(lowered final core::int #this) → core::int
  ;
static extension-member method /* from org-dartlang-testcase:///patch_lib.dart */ Extension|get#method(lowered final core::int #this) → () → core::int
  return () → core::int => self2::Extension|method(#this);

library;
import self as self3;
import "dart:core" as core;

static const field core::int value = 5;


Extra constant evaluation status:
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib.dart:9:1 -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib.dart:13:4 -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ (unknown position in org-dartlang-testcase:///origin_lib.dart) -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib.dart:21:4 -> InstanceConstant(const _Patch{})
Extra constant evaluation: evaluated: 7, effectively constant: 4
