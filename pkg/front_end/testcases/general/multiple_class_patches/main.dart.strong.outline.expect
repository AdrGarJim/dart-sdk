library;
import self as self;

import "dart:test";

static method main() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;

library;
import self as self2;
import "dart:_internal" as _in;
import "dart:core" as core;

import "dart:_internal";
import "dart:_internal";

@/* from org-dartlang-testcase:///patch_lib1.dart */ _in::patch
@/* from org-dartlang-testcase:///patch_lib2.dart */ _in::patch
class Class extends core::Object {
  synthetic constructor •() → self2::Class
    ;
  @_in::patch
  method /* from org-dartlang-testcase:///patch_lib1.dart */ method1() → core::int
    ;
  @_in::patch
  method /* from org-dartlang-testcase:///patch_lib2.dart */ method2() → core::int
    ;
  @/* from org-dartlang-testcase:///patch_lib1.dart */ _in::patch
  @_in::patch
  method /* from org-dartlang-testcase:///patch_lib2.dart */ method3() → core::int
    ;
}


Extra constant evaluation status:
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib1.dart:8:1 -> InstanceConstant(const _Patch{})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib2.dart:8:1 -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib1.dart:10:4 -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib2.dart:10:4 -> InstanceConstant(const _Patch{})
Evaluated: FileUriExpression @ org-dartlang-testcase:///patch_lib1.dart:13:3 -> InstanceConstant(const _Patch{})
Evaluated: StaticGet @ org-dartlang-testcase:///patch_lib2.dart:13:4 -> InstanceConstant(const _Patch{})
Extra constant evaluation: evaluated: 6, effectively constant: 6
