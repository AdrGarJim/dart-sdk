library;
import self as self;
import "dart:core" as core;

class Class extends core::Object {
  synthetic constructor •() → self::Class
    ;
  get getter() → core::int
    ;
  set setter(wildcard core::int _#wc1#formal) → void
    ;
}
extension /* unnamed */ _extension#0 on core::int {
  get getter = self::_extension#0|get#getter;
  method method = self::_extension#0|method;
  method tearoff method = self::_extension#0|get#method;
  set setter = self::_extension#0|set#setter;
}
extension /* unnamed */ _extension#1 on self::Class {
  get getter = self::_extension#1|get#getter;
  method method = self::_extension#1|method;
  method tearoff method = self::_extension#1|get#method;
  set setter = self::_extension#1|set#setter;
}
static field core::int getter;
static field core::int setter;
static extension-member method _extension#0|get#getter(lowered final core::int #this) → dynamic
  ;
static extension-member method _extension#0|set#setter(lowered final core::int #this, wildcard dynamic _#wc0#formal) → void
  ;
static extension-member method _extension#0|method(lowered final core::int #this) → dynamic
  ;
static extension-member method _extension#0|get#method(lowered final core::int #this) → () → dynamic
  return () → dynamic => self::_extension#0|method(#this);
static extension-member method _extension#1|get#getter(lowered final self::Class #this) → core::String
  ;
static extension-member method _extension#1|set#setter(lowered final self::Class #this, wildcard core::String _#wc2#formal) → void
  ;
static extension-member method _extension#1|method(lowered final self::Class #this) → void
  ;
static extension-member method _extension#1|get#method(lowered final self::Class #this) → () → void
  return () → void => self::_extension#1|method(#this);
