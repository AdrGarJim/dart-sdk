library;
import self as self;
import "dart:core" as core;

class Color extends core::Object /*hasConstConstructor*/  {
  final field core::int x;
  const constructor red(core::int x) → self::Color
    : self::Color::x = x, super core::Object::•()
    ;
}
static method main() → void {
  self::Color c = #C2;
  core::bool b = core::bool::fromEnvironment("env", defaultValue: true);
}

constants  {
  #C1 = 1
  #C2 = self::Color {x:#C1}
}


Constructor coverage from constants:
org-dartlang-testcase:///const_constructor.dart:
- Color.red (from org-dartlang-testcase:///const_constructor.dart:7:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
